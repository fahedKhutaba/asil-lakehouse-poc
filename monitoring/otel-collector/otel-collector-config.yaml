# OpenTelemetry Collector Configuration (Updated for latest version)
# Receives, processes, and exports telemetry data (metrics, traces, logs)

receivers:
  # OTLP receiver for gRPC and HTTP
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "*"
  
  # Prometheus receiver to scrape metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Batch processor - improves performance
  batch:
    timeout: 10s
    send_batch_size: 1024
  
  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128
  
  # Resource processor - adds resource attributes
  resource:
    attributes:
      - key: service.namespace
        value: lakehouse-poc
        action: upsert
      - key: deployment.environment
        value: development
        action: upsert
  
  # Attributes processor - modifies span/metric attributes
  attributes:
    actions:
      - key: environment
        value: development
        action: insert

exporters:
  # Prometheus exporter - exposes metrics for Prometheus to scrape
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: lakehouse
    const_labels:
      environment: development
  
  # OTLP exporter for Jaeger (replaces deprecated jaeger exporter)
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true
  
  # Debug exporter - outputs to console (replaces deprecated logging exporter)
  debug:
    verbosity: normal
    sampling_initial: 5
    sampling_thereafter: 200
  
  # File exporter for logs (can be ingested by Loki later)
  file:
    path: /tmp/otel-logs.json
    rotation:
      max_megabytes: 100
      max_days: 3
      max_backups: 3

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133
  
  # Performance profiler
  pprof:
    endpoint: 0.0.0.0:1777
  
  # zPages for debugging
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [otlp/jaeger, debug]
    
    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, debug]
    
    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [file, debug]
  
  telemetry:
    logs:
      level: info
    metrics:
      level: detailed
      readers:
        - pull:
            exporter:
              prometheus:
                host: "0.0.0.0"
                port: 8888
