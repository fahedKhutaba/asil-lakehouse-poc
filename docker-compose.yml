version: '3.8'

services:
  # PostgreSQL - OLTP Database
  postgres:
    image: postgres:15-alpine
    container_name: lakehouse-poc-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-socialnet}
      POSTGRES_USER: ${POSTGRES_USER:-lakeuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lakepass123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-lakeuser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lakehouse-network

  # MinIO - Object Storage (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: lakehouse-poc-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - lakehouse-network

  # AI Agent Service (FastAPI)
  ai-agent:
    build:
      context: .
      dockerfile: docker/ai-agent/Dockerfile
    container_name: lakehouse-poc-ai-agent
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-socialnet}
      - POSTGRES_USER=${POSTGRES_USER:-lakeuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-lakepass123}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DUCKDB_PATH=/app/data/lakehouse.duckdb
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - lakehouse-network
    command: uvicorn src.ai_agent.main:app --host 0.0.0.0 --port 8000 --reload

  # ETL Service
  etl:
    build:
      context: .
      dockerfile: docker/etl/Dockerfile
    container_name: lakehouse-poc-etl
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-socialnet}
      - POSTGRES_USER=${POSTGRES_USER:-lakeuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-lakepass123}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - ETL_BATCH_SIZE=${ETL_BATCH_SIZE:-10000}
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - lakehouse-network

volumes:
  postgres_data:
  minio_data:

networks:
  lakehouse-network:
    driver: bridge
